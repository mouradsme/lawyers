# Generated by Django 4.2.7 on 2024-04-09 18:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('USER1', 'User1'), ('LAWYER', 'Lawyer'), ('NOTARY', 'Notary')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Aff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Naff', models.IntegerField()),
                ('Nclient', models.CharField(max_length=60)),
                ('typeclient', models.CharField(choices=[('مدعى', 'مدعى'), ('مدعى عليه', 'مدعى عليه'), ('جاني', 'جاني'), ('مجنى عليه', 'مجنى عليه')], default='مدعى', max_length=20)),
                ('adversaire', models.CharField(max_length=60)),
                ('adresse', models.CharField(max_length=100)),
                ('avocat', models.CharField(max_length=100)),
                ('taffaire', models.CharField(choices=[('جنائي', 'جنائي'), ('مدني', 'مدني'), ('إداري', 'إداري'), ('أسري', 'أسري'), ('تجاري', 'تجاري'), ('عمالي', 'عمالي')], default='جنائي', max_length=20)),
                ('etapeaffaire', models.CharField(choices=[('ابتدائي', 'ابتدائي'), (' جزئي', ' جزئي'), ('نقض', 'نقض'), ('استئناف ', ' استئناف')], default='ابتدائي', max_length=20)),
                ('etataffaire', models.CharField(choices=[('منتهية', 'منتهية'), (' معلقة', ' معلقة'), ('تحت الدراسة', 'تحت الدراسة'), ('مرفوضة ', ' مرفوضة')], default='منتهية', max_length=20)),
                ('sujet', models.CharField(max_length=60)),
                ('budjet', models.FloatField()),
                ('date', models.DateField()),
                ('supprime', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='conseil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('price', models.DecimalField(decimal_places=0, max_digits=10, null=True)),
                ('max_accepted_clients', models.PositiveIntegerField(blank=True, null=True)),
                ('duration', models.CharField(choices=[('3_minutes', '3 Minutes'), ('lifetime', 'Lifetime')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lawyer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('lawyer_license', models.CharField(blank=True, max_length=50)),
                ('practice_areas', models.CharField(blank=True, max_length=255)),
                ('experience_years', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notary',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Notary_license', models.CharField(blank=True, max_length=50)),
                ('practice_areas', models.CharField(blank=True, max_length=255)),
                ('experience_years', models.PositiveIntegerField(blank=True, null=True)),
                ('subscription_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.subscriptionplan')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='tribunal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.conseil')),
            ],
        ),
        migrations.CreateModel(
            name='Seance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=60)),
                ('date', models.DateTimeField()),
                ('remarques', models.CharField(max_length=1000)),
                ('aff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.aff')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(default='default.jpg', upload_to='profile_images')),
                ('bio', models.TextField()),
                ('subscription_end_date', models.DateTimeField(blank=True, null=True)),
                ('subscription_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.subscriptionplan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versement', models.FloatField()),
                ('date', models.DateTimeField()),
                ('aff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.aff')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('recipient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sender_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='decision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('detail', models.CharField(max_length=1000)),
                ('aff', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='users.aff')),
            ],
        ),
        migrations.CreateModel(
            name='archiveaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Naff', models.IntegerField()),
                ('Nclient', models.CharField(max_length=60)),
                ('typeclient', models.CharField(max_length=20)),
                ('adversaire', models.CharField(max_length=60)),
                ('adresse', models.CharField(max_length=100)),
                ('avocat', models.CharField(max_length=100)),
                ('taffaire', models.CharField(max_length=20)),
                ('etapeaffaire', models.CharField(max_length=20)),
                ('etataffaire', models.CharField(max_length=20)),
                ('sujet', models.CharField(max_length=60)),
                ('budjet', models.FloatField()),
                ('date', models.DateField()),
                ('supprime', models.BooleanField(default=False)),
                ('date_archivage', models.DateTimeField(auto_now_add=True)),
                ('conseil_associated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.conseil')),
                ('tribunal_associated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.tribunal')),
            ],
        ),
        migrations.AddField(
            model_name='aff',
            name='conseil_associated',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.conseil'),
        ),
        migrations.AddField(
            model_name='aff',
            name='tribunal_associated',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.tribunal'),
        ),
        migrations.CreateModel(
            name='User1',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NotaryClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('mobile', models.IntegerField()),
                ('address', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('notary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accepted_clients', to='users.notary')),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notary_clients', to='users.user1')),
            ],
        ),
        migrations.CreateModel(
            name='LawyerClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('mobile', models.IntegerField(null=True)),
                ('address', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('lawyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accepted_clients', to='users.lawyer')),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lawyer_clients', to='users.user1')),
            ],
        ),
        migrations.AddField(
            model_name='aff',
            name='lawyer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aff_lawyer_clients', to='users.lawyer'),
        ),
        migrations.AddField(
            model_name='aff',
            name='user1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aff_clients', to='users.user1'),
        ),
    ]
